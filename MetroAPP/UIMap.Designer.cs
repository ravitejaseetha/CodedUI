// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace MetroAPP
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITest.Input;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.DirectUIControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WindowsRuntimeControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        #region Properties
        public UIStartmenuPane UIStartmenuPane
        {
            get
            {
                if ((this.mUIStartmenuPane == null))
                {
                    this.mUIStartmenuPane = new UIStartmenuPane();
                }
                return this.mUIStartmenuPane;
            }
        }
        
        public UIPTSWindow UIPTSWindow
        {
            get
            {
                if ((this.mUIPTSWindow == null))
                {
                    this.mUIPTSWindow = new UIPTSWindow();
                }
                return this.mUIPTSWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIStartmenuPane mUIStartmenuPane;
        
        private UIPTSWindow mUIPTSWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIStartmenuPane : UITestControl
    {
        
        public UIStartmenuPane()
        {
            #region Search Criteria
            this.TechnologyName = "UIA";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Pane";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Start menu";
            this.SearchProperties["FrameworkId"] = "Win32";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "ImmersiveLauncher";
            this.WindowTitles.Add("Start menu");
            #endregion
        }
        
        #region Properties
        public UIStartAppsList UIStartAppsList
        {
            get
            {
                if ((this.mUIStartAppsList == null))
                {
                    this.mUIStartAppsList = new UIStartAppsList(this);
                }
                return this.mUIStartAppsList;
            }
        }
        #endregion
        
        #region Fields
        private UIStartAppsList mUIStartAppsList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIStartAppsList : DirectUIControl
    {
        
        public UIStartAppsList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DirectUIControl.PropertyNames.AutomationId] = "GridRoot";
            this.WindowTitles.Add("Start menu");
            #endregion
        }
        
        #region Properties
        public UIMailGroup UIMailGroup
        {
            get
            {
                if ((this.mUIMailGroup == null))
                {
                    this.mUIMailGroup = new UIMailGroup(this);
                }
                return this.mUIMailGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIMailGroup mUIMailGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIMailGroup : DirectUIControl
    {
        
        public UIMailGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DirectUIControl.PropertyNames.AutomationId] = "Group 2305843009213693952";
            this.WindowTitles.Add("Start menu");
            #endregion
        }
        
        #region Properties
        public DirectUIControl UIPTSListItem
        {
            get
            {
                if ((this.mUIPTSListItem == null))
                {
                    this.mUIPTSListItem = new DirectUIControl(this);
                    #region Search Criteria
                    this.mUIPTSListItem.SearchProperties[DirectUIControl.PropertyNames.AutomationId] = "15fa5c6d-509c-4ea1-9459-cb4b0a9a0b35_bqdmac4rycgqj!App";
                    this.mUIPTSListItem.WindowTitles.Add("Start menu");
                    #endregion
                }
                return this.mUIPTSListItem;
            }
        }
        #endregion
        
        #region Fields
        private DirectUIControl mUIPTSListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPTSWindow : XamlWindow
    {
        
        public UIPTSWindow()
        {
            #region Search Criteria
            this.SearchProperties[XamlControl.PropertyNames.Name] = "PTS";
            this.SearchProperties[XamlControl.PropertyNames.ClassName] = "Windows.UI.Core.CoreWindow";
            this.WindowTitles.Add("PTS");
            #endregion
        }
        
        #region Properties
        public XamlEdit UIUserNameTextboxEdit
        {
            get
            {
                if ((this.mUIUserNameTextboxEdit == null))
                {
                    this.mUIUserNameTextboxEdit = new XamlEdit(this);
                    #region Search Criteria
                    this.mUIUserNameTextboxEdit.SearchProperties[XamlEdit.PropertyNames.AutomationId] = "UserNameTextbox";
                    this.mUIUserNameTextboxEdit.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUIUserNameTextboxEdit;
            }
        }
        
        public UIItemPane UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new UIItemPane(this);
                }
                return this.mUIItemPane;
            }
        }
        
        public XamlText UIRAPReportText
        {
            get
            {
                if ((this.mUIRAPReportText == null))
                {
                    this.mUIRAPReportText = new XamlText(this);
                    #region Search Criteria
                    this.mUIRAPReportText.SearchProperties[XamlText.PropertyNames.Name] = "RAP Report";
                    this.mUIRAPReportText.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUIRAPReportText;
            }
        }
        #endregion
        
        #region Fields
        private XamlEdit mUIUserNameTextboxEdit;
        
        private UIItemPane mUIItemPane;
        
        private XamlText mUIRAPReportText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemPane : XamlControl
    {
        
        public UIItemPane(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Pane";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "ScrollViewer";
            this.WindowTitles.Add("PTS");
            #endregion
        }
        
        #region Properties
        public XamlButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUIAddButton.SearchProperties[XamlButton.PropertyNames.Name] = "Add";
                    this.mUIAddButton.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        
        public XamlButton UIAcceptsonlyalphabetsButton
        {
            get
            {
                if ((this.mUIAcceptsonlyalphabetsButton == null))
                {
                    this.mUIAcceptsonlyalphabetsButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUIAcceptsonlyalphabetsButton.SearchProperties[XamlButton.PropertyNames.HelpText] = "Accepts only alphabets,spaces and dot";
                    this.mUIAcceptsonlyalphabetsButton.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUIAcceptsonlyalphabetsButton;
            }
        }
        #endregion
        
        #region Fields
        private XamlButton mUIAddButton;
        
        private XamlButton mUIAcceptsonlyalphabetsButton;
        #endregion
    }
}
