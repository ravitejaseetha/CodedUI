// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace RDT
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// July
        /// </summary>
        public void July()
        {
            #region Variable Declarations
            HtmlHyperlink uIOpenthecalendarpopupHyperlink = this.UIWelcometoSilverBulleWindow.UIOverTimeDocument1.UIOpenthecalendarpopupHyperlink;
            HtmlEdit uIDateInputEdit = this.UIWelcometoSilverBulleWindow.UIOverTimeDocument1.UIDateInputEdit;
            HtmlCell uIJune2015Cell = this.UIWelcometoSilverBulleWindow.UIOverTimeDocument1.UIJune2015Cell;
            HtmlHyperlink uIJulHyperlink = this.UIWelcometoSilverBulleWindow.UIOverTimeDocument1.UIJulCell.UIJulHyperlink;
            HtmlInputButton uIOKButton = this.UIWelcometoSilverBulleWindow.UIOverTimeDocument1.UIOKButton;
            #endregion

            // Click 'Open the calendar popup.' link
            Mouse.Click(uIOpenthecalendarpopupHyperlink, new Point(14, 10));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'dateInput' text box at (1, 1)
            Mouse.Hover(uIDateInputEdit, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'June 2015' cell
            Mouse.Click(uIJune2015Cell, new Point(56, 9));

            // Click 'Jul' link
            Mouse.Click(uIJulHyperlink, new Point(19, 10));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(8, 9));
        }
        
        #region Properties
        public UIWelcometoSilverBulleWindow UIWelcometoSilverBulleWindow
        {
            get
            {
                if ((this.mUIWelcometoSilverBulleWindow == null))
                {
                    this.mUIWelcometoSilverBulleWindow = new UIWelcometoSilverBulleWindow();
                }
                return this.mUIWelcometoSilverBulleWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIWelcometoSilverBulleWindow mUIWelcometoSilverBulleWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIWelcometoSilverBulleWindow : BrowserWindow
    {
        
        public UIWelcometoSilverBulleWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Welcome to ::Silver Bullet::";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Welcome to ::Silver Bullet::");
            this.WindowTitles.Add("Reliance Tool");
            this.WindowTitles.Add("OverTime");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIWelcometoSilverBulleDocument UIWelcometoSilverBulleDocument
        {
            get
            {
                if ((this.mUIWelcometoSilverBulleDocument == null))
                {
                    this.mUIWelcometoSilverBulleDocument = new UIWelcometoSilverBulleDocument(this);
                }
                return this.mUIWelcometoSilverBulleDocument;
            }
        }
        
        public UIRelianceToolDocument UIRelianceToolDocument
        {
            get
            {
                if ((this.mUIRelianceToolDocument == null))
                {
                    this.mUIRelianceToolDocument = new UIRelianceToolDocument(this);
                }
                return this.mUIRelianceToolDocument;
            }
        }
        
        public UIOverTimeDocument UIOverTimeDocument
        {
            get
            {
                if ((this.mUIOverTimeDocument == null))
                {
                    this.mUIOverTimeDocument = new UIOverTimeDocument(this);
                }
                return this.mUIOverTimeDocument;
            }
        }
        
        public UIOverTimeDocument1 UIOverTimeDocument1
        {
            get
            {
                if ((this.mUIOverTimeDocument1 == null))
                {
                    this.mUIOverTimeDocument1 = new UIOverTimeDocument1(this);
                }
                return this.mUIOverTimeDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UIWelcometoSilverBulleDocument mUIWelcometoSilverBulleDocument;
        
        private UIRelianceToolDocument mUIRelianceToolDocument;
        
        private UIOverTimeDocument mUIOverTimeDocument;
        
        private UIOverTimeDocument1 mUIOverTimeDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIWelcometoSilverBulleDocument : HtmlDocument
    {
        
        public UIWelcometoSilverBulleDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Welcome to ::Silver Bullet::";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/RDT/login.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://192.168.0.105/RDT/login.aspx?ReturnUrl=%2fRDT%2fOvertimes%2fList.aspx";
            this.WindowTitles.Add("Welcome to ::Silver Bullet::");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIUserNameEdit
        {
            get
            {
                if ((this.mUIUserNameEdit == null))
                {
                    this.mUIUserNameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIUserNameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Login1_UserName";
                    this.mUIUserNameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Login1$UserName";
                    this.mUIUserNameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "User Name:";
                    this.mUIUserNameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIUserNameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIUserNameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputtextbox1";
                    this.mUIUserNameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Login1$UserName\" class=\"inputtextb";
                    this.mUIUserNameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUIUserNameEdit.WindowTitles.Add("Welcome to ::Silver Bullet::");
                    #endregion
                }
                return this.mUIUserNameEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Login1_Password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Login1$Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password:";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "inputtextbox1";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Login1$Password\" class=\"inputtextb";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    this.mUIPasswordEdit.WindowTitles.Add("Welcome to ::Silver Bullet::");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public HtmlInputButton UILogin1LoginButtonButton
        {
            get
            {
                if ((this.mUILogin1LoginButtonButton == null))
                {
                    this.mUILogin1LoginButtonButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUILogin1LoginButtonButton.SearchProperties[HtmlButton.PropertyNames.Id] = "Login1_LoginButton";
                    this.mUILogin1LoginButtonButton.SearchProperties[HtmlButton.PropertyNames.Name] = "Login1$LoginButton";
                    this.mUILogin1LoginButtonButton.FilterProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUILogin1LoginButtonButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILogin1LoginButtonButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILogin1LoginButtonButton.FilterProperties[HtmlButton.PropertyNames.Class] = "LoginButton";
                    this.mUILogin1LoginButtonButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "name=\"Login1$LoginButton\" class=\"LoginBu";
                    this.mUILogin1LoginButtonButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "8";
                    this.mUILogin1LoginButtonButton.WindowTitles.Add("Welcome to ::Silver Bullet::");
                    #endregion
                }
                return this.mUILogin1LoginButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIUserNameEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private HtmlInputButton mUILogin1LoginButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIRelianceToolDocument : HtmlDocument
    {
        
        public UIRelianceToolDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Reliance Tool";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/RDT/Overtimes/List.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://192.168.0.105/RDT/Overtimes/List.aspx";
            this.WindowTitles.Add("Reliance Tool");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIAddNewOverTimeHyperlink
        {
            get
            {
                if ((this.mUIAddNewOverTimeHyperlink == null))
                {
                    this.mUIAddNewOverTimeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIAddNewOverTimeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "ContentPlaceHolder1_InsertHyperLink";
                    this.mUIAddNewOverTimeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIAddNewOverTimeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIAddNewOverTimeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Add New OverTime";
                    this.mUIAddNewOverTimeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/RDT/Overtimes/Insert.aspx";
                    this.mUIAddNewOverTimeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIAddNewOverTimeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://192.168.0.105/RDT/Overtimes/Insert.aspx?EmployeeId=151";
                    this.mUIAddNewOverTimeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIAddNewOverTimeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"ContentPlaceHolder1_InsertHyperLink\"";
                    this.mUIAddNewOverTimeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "86";
                    this.mUIAddNewOverTimeHyperlink.WindowTitles.Add("Reliance Tool");
                    #endregion
                }
                return this.mUIAddNewOverTimeHyperlink;
            }
        }
        
        public UICtl00_RadMenu1Pane UICtl00_RadMenu1Pane
        {
            get
            {
                if ((this.mUICtl00_RadMenu1Pane == null))
                {
                    this.mUICtl00_RadMenu1Pane = new UICtl00_RadMenu1Pane(this);
                }
                return this.mUICtl00_RadMenu1Pane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIAddNewOverTimeHyperlink;
        
        private UICtl00_RadMenu1Pane mUICtl00_RadMenu1Pane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICtl00_RadMenu1Pane : HtmlDiv
    {
        
        public UICtl00_RadMenu1Pane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "ctl00_RadMenu1";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Home\r\n\r\n\r\n\r\nFinance Management\r\n\r\nYour b";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "RadMenu RadMenu_Office2007 rmSized";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"RadMenu RadMenu_Office2007 rmSized\" id=\"ctl00_RadMenu1\" style=\"width: 100%" +
                "; z-index: 1;\" enenableoverlay=\"true\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "14";
            this.WindowTitles.Add("Reliance Tool");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIHRManagementHyperlink
        {
            get
            {
                if ((this.mUIHRManagementHyperlink == null))
                {
                    this.mUIHRManagementHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIHRManagementHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIHRManagementHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIHRManagementHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIHRManagementHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "HR Management";
                    this.mUIHRManagementHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/RDT/Overtimes/List.aspx";
                    this.mUIHRManagementHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIHRManagementHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://192.168.0.105/RDT/Overtimes/List.aspx#";
                    this.mUIHRManagementHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "rmLink rmRootLink rmFocused";
                    this.mUIHRManagementHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"rmLink rmRootLink rmFocused\" href";
                    this.mUIHRManagementHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "38";
                    this.mUIHRManagementHyperlink.WindowTitles.Add("Reliance Tool");
                    #endregion
                }
                return this.mUIHRManagementHyperlink;
            }
        }
        
        public HtmlHyperlink UIOvertimeWorkHyperlink
        {
            get
            {
                if ((this.mUIOvertimeWorkHyperlink == null))
                {
                    this.mUIOvertimeWorkHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIOvertimeWorkHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIOvertimeWorkHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIOvertimeWorkHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIOvertimeWorkHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Overtime Work";
                    this.mUIOvertimeWorkHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/RDT/OverTimes/list.aspx";
                    this.mUIOvertimeWorkHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIOvertimeWorkHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://192.168.0.105/RDT/OverTimes/list.aspx";
                    this.mUIOvertimeWorkHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "rmLink rmFocused";
                    this.mUIOvertimeWorkHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"rmLink rmFocused\" style=\"width: 2";
                    this.mUIOvertimeWorkHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "42";
                    this.mUIOvertimeWorkHyperlink.WindowTitles.Add("Reliance Tool");
                    #endregion
                }
                return this.mUIOvertimeWorkHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIHRManagementHyperlink;
        
        private HtmlHyperlink mUIOvertimeWorkHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIOverTimeDocument : HtmlDocument
    {
        
        public UIOverTimeDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "OverTime";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/RDT/Overtimes/Insert.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://192.168.0.105/RDT/Overtimes/Insert.aspx?EmployeeId=151";
            this.WindowTitles.Add("OverTime");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIDateInputEdit
        {
            get
            {
                if ((this.mUIDateInputEdit == null))
                {
                    this.mUIDateInputEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIDateInputEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_ContentPlaceHolder1_FormView1_insertItemTemplate_ctl00_ctl01___Date_TextBox" +
                        "1_dateInput";
                    this.mUIDateInputEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$ContentPlaceHolder1$FormView1$insertItemTemplate$ctl00$ctl01$__Date$TextBox" +
                        "1$dateInput";
                    this.mUIDateInputEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIDateInputEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIDateInputEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDateInputEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "riTextBox riRead";
                    this.mUIDateInputEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"ctl00$ContentPlaceHolder1$FormView";
                    this.mUIDateInputEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "13";
                    this.mUIDateInputEdit.WindowTitles.Add("OverTime");
                    #endregion
                }
                return this.mUIDateInputEdit;
            }
        }
        
        public HtmlEdit UIOverTimeHoursEdit
        {
            get
            {
                if ((this.mUIOverTimeHoursEdit == null))
                {
                    this.mUIOverTimeHoursEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIOverTimeHoursEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_ContentPlaceHolder1_FormView1_insertItemTemplate_ctl00_ctl02___OvertimeHour" +
                        "s_TextBox1";
                    this.mUIOverTimeHoursEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$ContentPlaceHolder1$FormView1$insertItemTemplate$ctl00$ctl02$__OvertimeHour" +
                        "s$TextBox1";
                    this.mUIOverTimeHoursEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "OverTime Hours";
                    this.mUIOverTimeHoursEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIOverTimeHoursEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIOverTimeHoursEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "riTextBox riEnabled";
                    this.mUIOverTimeHoursEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"ctl00$ContentPlaceHolder1$FormView";
                    this.mUIOverTimeHoursEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "18";
                    this.mUIOverTimeHoursEdit.WindowTitles.Add("OverTime");
                    #endregion
                }
                return this.mUIOverTimeHoursEdit;
            }
        }
        
        public HtmlEdit UIAmountPerHourEdit
        {
            get
            {
                if ((this.mUIAmountPerHourEdit == null))
                {
                    this.mUIAmountPerHourEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAmountPerHourEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_ContentPlaceHolder1_FormView1_insertItemTemplate_ctl00_ctl03___AmountPerHou" +
                        "r_TextBox1";
                    this.mUIAmountPerHourEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$ContentPlaceHolder1$FormView1$insertItemTemplate$ctl00$ctl03$__AmountPerHou" +
                        "r$TextBox1";
                    this.mUIAmountPerHourEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Amount Per Hour";
                    this.mUIAmountPerHourEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAmountPerHourEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAmountPerHourEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "riTextBox riEnabled";
                    this.mUIAmountPerHourEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"ctl00$ContentPlaceHolder1$FormView";
                    this.mUIAmountPerHourEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "20";
                    this.mUIAmountPerHourEdit.WindowTitles.Add("OverTime");
                    #endregion
                }
                return this.mUIAmountPerHourEdit;
            }
        }
        
        public HtmlHyperlink UIWebForm_DoPostBackWiHyperlink
        {
            get
            {
                if ((this.mUIWebForm_DoPostBackWiHyperlink == null))
                {
                    this.mUIWebForm_DoPostBackWiHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIWebForm_DoPostBackWiHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "ContentPlaceHolder1_FormView1_insertItemTemplate_LinkButton1";
                    this.mUIWebForm_DoPostBackWiHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIWebForm_DoPostBackWiHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIWebForm_DoPostBackWiHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = null;
                    this.mUIWebForm_DoPostBackWiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "WebForm_DoPostBackWithOptions(new%20WebForm_PostBackOptions(%22ctl00$ContentPlace" +
                        "Holder1$FormView1$insertItemTemplate$LinkButton1%22,%20%22%22,%20true,%20%22%22," +
                        "%20%22%22,%20false,%20true))";
                    this.mUIWebForm_DoPostBackWiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIWebForm_DoPostBackWiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(\"ctl00$Conte" +
                        "ntPlaceHolder1$FormView1$insertItemTemplate$LinkButton1\", \"\", true, \"\", \"\", fals" +
                        "e, true))";
                    this.mUIWebForm_DoPostBackWiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "Insert_Button";
                    this.mUIWebForm_DoPostBackWiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"Insert_Button\" id=\"ContentPlaceHo";
                    this.mUIWebForm_DoPostBackWiHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "134";
                    this.mUIWebForm_DoPostBackWiHyperlink.WindowTitles.Add("OverTime");
                    #endregion
                }
                return this.mUIWebForm_DoPostBackWiHyperlink;
            }
        }
        
        public HtmlEdit UIEmployeeEdit
        {
            get
            {
                if ((this.mUIEmployeeEdit == null))
                {
                    this.mUIEmployeeEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmployeeEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_ContentPlaceHolder1_FormView1_insertItemTemplate_ctl00_ctl00___Employee_Rad" +
                        "ComboBox1_Employee_Input";
                    this.mUIEmployeeEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$ContentPlaceHolder1$FormView1$insertItemTemplate$ctl00$ctl00$__Employee$Rad" +
                        "ComboBox1_Employee";
                    this.mUIEmployeeEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIEmployeeEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmployeeEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmployeeEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "rcbInput radPreventDecorate";
                    this.mUIEmployeeEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"ctl00$ContentPlaceHolder1$FormView";
                    this.mUIEmployeeEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "10";
                    this.mUIEmployeeEdit.WindowTitles.Add("OverTime");
                    #endregion
                }
                return this.mUIEmployeeEdit;
            }
        }
        
        public HtmlHyperlink UIOpenthecalendarpopupHyperlink
        {
            get
            {
                if ((this.mUIOpenthecalendarpopupHyperlink == null))
                {
                    this.mUIOpenthecalendarpopupHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIOpenthecalendarpopupHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "ctl00_ContentPlaceHolder1_FormView1_insertItemTemplate_ctl00_ctl01___Date_TextBox" +
                        "1_popupButton";
                    this.mUIOpenthecalendarpopupHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIOpenthecalendarpopupHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIOpenthecalendarpopupHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Open the calendar popup.";
                    this.mUIOpenthecalendarpopupHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/RDT/Overtimes/Insert.aspx";
                    this.mUIOpenthecalendarpopupHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIOpenthecalendarpopupHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://192.168.0.105/RDT/Overtimes/Insert.aspx?EmployeeId=151#";
                    this.mUIOpenthecalendarpopupHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "rcCalPopup";
                    this.mUIOpenthecalendarpopupHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"rcCalPopup\" id=\"ctl00_ContentPlac";
                    this.mUIOpenthecalendarpopupHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "87";
                    this.mUIOpenthecalendarpopupHyperlink.WindowTitles.Add("OverTime");
                    #endregion
                }
                return this.mUIOpenthecalendarpopupHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIDateInputEdit;
        
        private HtmlEdit mUIOverTimeHoursEdit;
        
        private HtmlEdit mUIAmountPerHourEdit;
        
        private HtmlHyperlink mUIWebForm_DoPostBackWiHyperlink;
        
        private HtmlEdit mUIEmployeeEdit;
        
        private HtmlHyperlink mUIOpenthecalendarpopupHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIOverTimeDocument1 : HtmlDocument
    {
        
        public UIOverTimeDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "OverTime";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/RDT/Overtimes/Insert.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost/RDT/Overtimes/Insert.aspx?EmployeeId=151";
            this.WindowTitles.Add("OverTime");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIOpenthecalendarpopupHyperlink
        {
            get
            {
                if ((this.mUIOpenthecalendarpopupHyperlink == null))
                {
                    this.mUIOpenthecalendarpopupHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIOpenthecalendarpopupHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "ctl00_ContentPlaceHolder1_FormView1_insertItemTemplate_ctl00_ctl01___Date_TextBox" +
                        "1_popupButton";
                    this.mUIOpenthecalendarpopupHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIOpenthecalendarpopupHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIOpenthecalendarpopupHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Open the calendar popup.";
                    this.mUIOpenthecalendarpopupHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/RDT/Overtimes/Insert.aspx";
                    this.mUIOpenthecalendarpopupHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIOpenthecalendarpopupHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost/RDT/Overtimes/Insert.aspx?EmployeeId=151#";
                    this.mUIOpenthecalendarpopupHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "rcCalPopup";
                    this.mUIOpenthecalendarpopupHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"rcCalPopup\" id=\"ctl00_ContentPlac";
                    this.mUIOpenthecalendarpopupHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "87";
                    this.mUIOpenthecalendarpopupHyperlink.WindowTitles.Add("OverTime");
                    #endregion
                }
                return this.mUIOpenthecalendarpopupHyperlink;
            }
        }
        
        public HtmlEdit UIDateInputEdit
        {
            get
            {
                if ((this.mUIDateInputEdit == null))
                {
                    this.mUIDateInputEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIDateInputEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "ctl00_ContentPlaceHolder1_FormView1_insertItemTemplate_ctl00_ctl01___Date_TextBox" +
                        "1_dateInput";
                    this.mUIDateInputEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "ctl00$ContentPlaceHolder1$FormView1$insertItemTemplate$ctl00$ctl01$__Date$TextBox" +
                        "1$dateInput";
                    this.mUIDateInputEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIDateInputEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIDateInputEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDateInputEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "riTextBox riRead";
                    this.mUIDateInputEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"ctl00$ContentPlaceHolder1$FormView";
                    this.mUIDateInputEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "16";
                    this.mUIDateInputEdit.WindowTitles.Add("OverTime");
                    #endregion
                }
                return this.mUIDateInputEdit;
            }
        }
        
        public HtmlCell UIJune2015Cell
        {
            get
            {
                if ((this.mUIJune2015Cell == null))
                {
                    this.mUIJune2015Cell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIJune2015Cell.SearchProperties[HtmlCell.PropertyNames.Id] = "ctl00_ContentPlaceHolder1_FormView1_insertItemTemplate_ctl00_ctl01___Date_TextBox" +
                        "1_calendar_Title";
                    this.mUIJune2015Cell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIJune2015Cell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "June 2015";
                    this.mUIJune2015Cell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "class=\"rcTitle\" id=\"ctl00_ContentPlaceHolder1_FormView1_insertItemTemplate_ctl00_" +
                        "ctl01___Date_TextBox1_calendar_Title\"";
                    this.mUIJune2015Cell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIJune2015Cell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "2";
                    this.mUIJune2015Cell.FilterProperties[HtmlCell.PropertyNames.Class] = "rcTitle";
                    this.mUIJune2015Cell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "4";
                    this.mUIJune2015Cell.WindowTitles.Add("OverTime");
                    #endregion
                }
                return this.mUIJune2015Cell;
            }
        }
        
        public UIJulCell UIJulCell
        {
            get
            {
                if ((this.mUIJulCell == null))
                {
                    this.mUIJulCell = new UIJulCell(this);
                }
                return this.mUIJulCell;
            }
        }
        
        public HtmlInputButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[HtmlButton.PropertyNames.Id] = "rcMView_OK";
                    this.mUIOKButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIOKButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "OK";
                    this.mUIOKButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIOKButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIOKButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUIOKButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=\"rcMView_OK\" type=\"button\" value=\"OK\"";
                    this.mUIOKButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUIOKButton.WindowTitles.Add("OverTime");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIOpenthecalendarpopupHyperlink;
        
        private HtmlEdit mUIDateInputEdit;
        
        private HtmlCell mUIJune2015Cell;
        
        private UIJulCell mUIJulCell;
        
        private HtmlInputButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIJulCell : HtmlCell
    {
        
        public UIJulCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlCell.PropertyNames.Id] = "rcMView_Jul";
            this.SearchProperties[HtmlCell.PropertyNames.Name] = null;
            this.SearchProperties[HtmlCell.PropertyNames.InnerText] = "Jul";
            this.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = "id=\"rcMView_Jul\"";
            this.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "3";
            this.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
            this.FilterProperties[HtmlCell.PropertyNames.Class] = null;
            this.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "13";
            this.WindowTitles.Add("OverTime");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIJulHyperlink
        {
            get
            {
                if ((this.mUIJulHyperlink == null))
                {
                    this.mUIJulHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIJulHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIJulHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIJulHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIJulHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Jul";
                    this.mUIJulHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIJulHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIJulHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "#";
                    this.mUIJulHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIJulHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"#\"";
                    this.mUIJulHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIJulHyperlink.WindowTitles.Add("OverTime");
                    #endregion
                }
                return this.mUIJulHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIJulHyperlink;
        #endregion
    }
}
