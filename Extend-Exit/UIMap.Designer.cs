// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Extend_Exit
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITest.Input;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.DirectUIControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WindowsRuntimeControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        #region Properties
        public UIPTSWindow UIPTSWindow
        {
            get
            {
                if ((this.mUIPTSWindow == null))
                {
                    this.mUIPTSWindow = new UIPTSWindow();
                }
                return this.mUIPTSWindow;
            }
        }
        
        public UIStartmenuPane UIStartmenuPane
        {
            get
            {
                if ((this.mUIStartmenuPane == null))
                {
                    this.mUIStartmenuPane = new UIStartmenuPane();
                }
                return this.mUIStartmenuPane;
            }
        }
        #endregion
        
        #region Fields
        private UIPTSWindow mUIPTSWindow;
        
        private UIStartmenuPane mUIStartmenuPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPTSWindow : XamlWindow
    {
        
        public UIPTSWindow()
        {
            #region Search Criteria
            this.SearchProperties[XamlControl.PropertyNames.Name] = "PTS";
            this.SearchProperties[XamlControl.PropertyNames.ClassName] = "Windows.UI.Core.CoreWindow";
            this.WindowTitles.Add("PTS");
            #endregion
        }
        
        #region Properties
        public UIItemPane UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new UIItemPane(this);
                }
                return this.mUIItemPane;
            }
        }
        
        public UIPopupWindow UIPopupWindow
        {
            get
            {
                if ((this.mUIPopupWindow == null))
                {
                    this.mUIPopupWindow = new UIPopupWindow(this);
                }
                return this.mUIPopupWindow;
            }
        }
        
        public UIDatepickerGroup UIDatepickerGroup
        {
            get
            {
                if ((this.mUIDatepickerGroup == null))
                {
                    this.mUIDatepickerGroup = new UIDatepickerGroup(this);
                }
                return this.mUIDatepickerGroup;
            }
        }
        
        public XamlButton UISearchButton
        {
            get
            {
                if ((this.mUISearchButton == null))
                {
                    this.mUISearchButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUISearchButton.SearchProperties[XamlButton.PropertyNames.AutomationId] = "Search";
                    this.mUISearchButton.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUISearchButton;
            }
        }
        
        public UIGridViewList UIGridViewList
        {
            get
            {
                if ((this.mUIGridViewList == null))
                {
                    this.mUIGridViewList = new UIGridViewList(this);
                }
                return this.mUIGridViewList;
            }
        }
        
        public UIItemList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new UIItemList(this);
                }
                return this.mUIItemList;
            }
        }
        
        public XamlButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUIItemButton.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private UIItemPane mUIItemPane;
        
        private UIPopupWindow mUIPopupWindow;
        
        private UIDatepickerGroup mUIDatepickerGroup;
        
        private XamlButton mUISearchButton;
        
        private UIGridViewList mUIGridViewList;
        
        private UIItemList mUIItemList;
        
        private XamlButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemPane : XamlControl
    {
        
        public UIItemPane(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Pane";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "ScrollViewer";
            this.WindowTitles.Add("PTS");
            #endregion
        }
        
        #region Properties
        public UIExtendRapButtonButton UIExtendRapButtonButton
        {
            get
            {
                if ((this.mUIExtendRapButtonButton == null))
                {
                    this.mUIExtendRapButtonButton = new UIExtendRapButtonButton(this);
                }
                return this.mUIExtendRapButtonButton;
            }
        }
        
        public XamlButton UISaveAndPrintButton_CButton
        {
            get
            {
                if ((this.mUISaveAndPrintButton_CButton == null))
                {
                    this.mUISaveAndPrintButton_CButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUISaveAndPrintButton_CButton.SearchProperties[XamlButton.PropertyNames.AutomationId] = "SaveAndPrintButton_Copy";
                    this.mUISaveAndPrintButton_CButton.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUISaveAndPrintButton_CButton;
            }
        }
        #endregion
        
        #region Fields
        private UIExtendRapButtonButton mUIExtendRapButtonButton;
        
        private XamlButton mUISaveAndPrintButton_CButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIExtendRapButtonButton : XamlButton
    {
        
        public UIExtendRapButtonButton(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[XamlButton.PropertyNames.AutomationId] = "ExtendRapButton";
            this.WindowTitles.Add("PTS");
            #endregion
        }
        
        #region Properties
        public XamlButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIItemButton.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private XamlButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPopupWindow : XamlWindow
    {
        
        public UIPopupWindow(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[XamlControl.PropertyNames.Name] = "Popup";
            this.WindowTitles.Add("PTS");
            #endregion
        }
        
        #region Properties
        public XamlButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[XamlButton.PropertyNames.AutomationId] = "SaveIlpExtensionDateButton";
                    this.mUISaveButton.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private XamlButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDatepickerGroup : XamlControl
    {
        
        public UIDatepickerGroup(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Group";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "datepicker";
            this.WindowTitles.Add("PTS");
            #endregion
        }
        
        #region Properties
        public XamlComboBox UIDayComboBox
        {
            get
            {
                if ((this.mUIDayComboBox == null))
                {
                    this.mUIDayComboBox = new XamlComboBox(this);
                    #region Search Criteria
                    this.mUIDayComboBox.SearchProperties[XamlComboBox.PropertyNames.AutomationId] = "DayPicker";
                    this.mUIDayComboBox.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUIDayComboBox;
            }
        }
        
        public XamlComboBox UIMonthComboBox
        {
            get
            {
                if ((this.mUIMonthComboBox == null))
                {
                    this.mUIMonthComboBox = new XamlComboBox(this);
                    #region Search Criteria
                    this.mUIMonthComboBox.SearchProperties[XamlComboBox.PropertyNames.AutomationId] = "MonthPicker";
                    this.mUIMonthComboBox.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUIMonthComboBox;
            }
        }
        #endregion
        
        #region Fields
        private XamlComboBox mUIDayComboBox;
        
        private XamlComboBox mUIMonthComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGridViewList : XamlList
    {
        
        public UIGridViewList(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[XamlList.PropertyNames.AutomationId] = "gridView";
            this.WindowTitles.Add("PTS");
            #endregion
        }
        
        #region Properties
        public XamlListItem UIPtsModelInLinePermitListItem
        {
            get
            {
                if ((this.mUIPtsModelInLinePermitListItem == null))
                {
                    this.mUIPtsModelInLinePermitListItem = new XamlListItem(this);
                    #region Search Criteria
                    this.mUIPtsModelInLinePermitListItem.SearchProperties[XamlListItem.PropertyNames.Name] = "Pts.Model.InLinePermitApplication";
                    this.mUIPtsModelInLinePermitListItem.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUIPtsModelInLinePermitListItem;
            }
        }
        #endregion
        
        #region Fields
        private XamlListItem mUIPtsModelInLinePermitListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemList : XamlList
    {
        
        public UIItemList(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("PTS");
            #endregion
        }
        
        #region Properties
        public UIPtsModelTouristListItem UIPtsModelTouristListItem
        {
            get
            {
                if ((this.mUIPtsModelTouristListItem == null))
                {
                    this.mUIPtsModelTouristListItem = new UIPtsModelTouristListItem(this);
                }
                return this.mUIPtsModelTouristListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIPtsModelTouristListItem mUIPtsModelTouristListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPtsModelTouristListItem : XamlListItem
    {
        
        public UIPtsModelTouristListItem(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[XamlListItem.PropertyNames.Name] = "Pts.Model.Tourist";
            this.WindowTitles.Add("PTS");
            #endregion
        }
        
        #region Properties
        public XamlCheckBox UICheckBoxCheckBox
        {
            get
            {
                if ((this.mUICheckBoxCheckBox == null))
                {
                    this.mUICheckBoxCheckBox = new XamlCheckBox(this);
                    #region Search Criteria
                    this.mUICheckBoxCheckBox.SearchProperties[XamlCheckBox.PropertyNames.AutomationId] = "CheckBox";
                    this.mUICheckBoxCheckBox.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUICheckBoxCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private XamlCheckBox mUICheckBoxCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIStartmenuPane : UITestControl
    {
        
        public UIStartmenuPane()
        {
            #region Search Criteria
            this.TechnologyName = "UIA";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Pane";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Start menu";
            this.SearchProperties["FrameworkId"] = "Win32";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "ImmersiveLauncher";
            this.WindowTitles.Add("Start menu");
            #endregion
        }
        
        #region Properties
        public UIStartAppsList UIStartAppsList
        {
            get
            {
                if ((this.mUIStartAppsList == null))
                {
                    this.mUIStartAppsList = new UIStartAppsList(this);
                }
                return this.mUIStartAppsList;
            }
        }
        #endregion
        
        #region Fields
        private UIStartAppsList mUIStartAppsList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIStartAppsList : DirectUIControl
    {
        
        public UIStartAppsList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DirectUIControl.PropertyNames.AutomationId] = "GridRoot";
            this.WindowTitles.Add("Start menu");
            #endregion
        }
        
        #region Properties
        public UIMailGroup UIMailGroup
        {
            get
            {
                if ((this.mUIMailGroup == null))
                {
                    this.mUIMailGroup = new UIMailGroup(this);
                }
                return this.mUIMailGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIMailGroup mUIMailGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIMailGroup : DirectUIControl
    {
        
        public UIMailGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DirectUIControl.PropertyNames.AutomationId] = "Group 2305843009213693952";
            this.WindowTitles.Add("Start menu");
            #endregion
        }
        
        #region Properties
        public DirectUIControl UIPTSListItem
        {
            get
            {
                if ((this.mUIPTSListItem == null))
                {
                    this.mUIPTSListItem = new DirectUIControl(this);
                    #region Search Criteria
                    this.mUIPTSListItem.SearchProperties[DirectUIControl.PropertyNames.AutomationId] = "15fa5c6d-509c-4ea1-9459-cb4b0a9a0b35_bqdmac4rycgqj!App";
                    this.mUIPTSListItem.WindowTitles.Add("Start menu");
                    #endregion
                }
                return this.mUIPTSListItem;
            }
        }
        #endregion
        
        #region Fields
        private DirectUIControl mUIPTSListItem;
        #endregion
    }
}
