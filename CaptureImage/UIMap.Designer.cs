// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CaptureImage
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RAPReporPage - Use 'RAPReporPageExpectedValues' to pass parameters into this method.
        /// </summary>
        public void RAPReporPage()
        {
            #region Variable Declarations
            HtmlDiv uIRAPReportPane = this.UIGovernmentofSikkimStWindow.UIGovernmentofSikkimStDocument.UICtl01Custom.UIRAPReportPane;
            #endregion

            // Verify that the 'InnerText' property of 'RAP Report' pane equals 'RAP Report '
            Assert.AreEqual(this.RAPReporPageExpectedValues.UIRAPReportPaneInnerText, uIRAPReportPane.InnerText, "Not Found");
        }
        
        #region Properties
        public virtual RAPReporPageExpectedValues RAPReporPageExpectedValues
        {
            get
            {
                if ((this.mRAPReporPageExpectedValues == null))
                {
                    this.mRAPReporPageExpectedValues = new RAPReporPageExpectedValues();
                }
                return this.mRAPReporPageExpectedValues;
            }
        }
        
        public UIGovernmentofSikkimStWindow UIGovernmentofSikkimStWindow
        {
            get
            {
                if ((this.mUIGovernmentofSikkimStWindow == null))
                {
                    this.mUIGovernmentofSikkimStWindow = new UIGovernmentofSikkimStWindow();
                }
                return this.mUIGovernmentofSikkimStWindow;
            }
        }
        #endregion
        
        #region Fields
        private RAPReporPageExpectedValues mRAPReporPageExpectedValues;
        
        private UIGovernmentofSikkimStWindow mUIGovernmentofSikkimStWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RAPReporPage'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class RAPReporPageExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'RAP Report' pane equals 'RAP Report '
        /// </summary>
        public string UIRAPReportPaneInnerText = "RAP Report ";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGovernmentofSikkimStWindow : BrowserWindow
    {
        
        public UIGovernmentofSikkimStWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Government of Sikkim | State Permit Tracking System";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Government of Sikkim | State Permit Tracking System");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGovernmentofSikkimStDocument UIGovernmentofSikkimStDocument
        {
            get
            {
                if ((this.mUIGovernmentofSikkimStDocument == null))
                {
                    this.mUIGovernmentofSikkimStDocument = new UIGovernmentofSikkimStDocument(this);
                }
                return this.mUIGovernmentofSikkimStDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGovernmentofSikkimStDocument mUIGovernmentofSikkimStDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGovernmentofSikkimStDocument : HtmlDocument
    {
        
        public UIGovernmentofSikkimStDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Government of Sikkim | State Permit Tracking System";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/PtsWeb/Reports/IlpReport.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://raviteja/PtsWeb/Reports/IlpReport.aspx?ilpnumber=P1973770411798";
            this.WindowTitles.Add("Government of Sikkim | State Permit Tracking System");
            #endregion
        }
        
        #region Properties
        public UICtl01Custom UICtl01Custom
        {
            get
            {
                if ((this.mUICtl01Custom == null))
                {
                    this.mUICtl01Custom = new UICtl01Custom(this);
                }
                return this.mUICtl01Custom;
            }
        }
        #endregion
        
        #region Fields
        private UICtl01Custom mUICtl01Custom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICtl01Custom : HtmlCustom
    {
        
        public UICtl01Custom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "ctl01";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"ctl01\" action=\"IlpReport.aspx?ilpnum";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Government of Sikkim | State Permit Tracking System");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIRAPReportPane
        {
            get
            {
                if ((this.mUIRAPReportPane == null))
                {
                    this.mUIRAPReportPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIRAPReportPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIRAPReportPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIRAPReportPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "RAP Report ";
                    this.mUIRAPReportPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIRAPReportPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "panel-heading";
                    this.mUIRAPReportPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"panel-heading\"";
                    this.mUIRAPReportPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "9";
                    this.mUIRAPReportPane.WindowTitles.Add("Government of Sikkim | State Permit Tracking System");
                    #endregion
                }
                return this.mUIRAPReportPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIRAPReportPane;
        #endregion
    }
}
