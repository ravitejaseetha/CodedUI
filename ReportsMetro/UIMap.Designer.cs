// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace ReportsMetro
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITest.Input;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.DirectUIControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WindowsRuntimeControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// TouristCount - Use 'TouristCountExpectedValues' to pass parameters into this method.
        /// </summary>
        public void TouristCount()
        {
            #region Variable Declarations
            XamlText totalTourists = this.UIPTSWindow.UIScrollViewerPane.TotalTourists;
            #endregion

            // Verify that the 'DisplayText' property of '10' label equals '10'
            Assert.AreEqual(this.TouristCountExpectedValues.TotalTouristsDisplayText, totalTourists.Name, "Not found");
            //Console.WriteLine("Total Count:\t"+this.UIPTSWindow.UIScrollViewerPane.TotalTourists.Name);
        }
        
        #region Properties
        public virtual TouristCountExpectedValues TouristCountExpectedValues
        {
            get
            {
                if ((this.mTouristCountExpectedValues == null))
                {
                    this.mTouristCountExpectedValues = new TouristCountExpectedValues();
                }
                return this.mTouristCountExpectedValues;
            }
        }
        
        public UIStartmenuPane UIStartmenuPane
        {
            get
            {
                if ((this.mUIStartmenuPane == null))
                {
                    this.mUIStartmenuPane = new UIStartmenuPane();
                }
                return this.mUIStartmenuPane;
            }
        }
        
        public UIPTSWindow UIPTSWindow
        {
            get
            {
                if ((this.mUIPTSWindow == null))
                {
                    this.mUIPTSWindow = new UIPTSWindow();
                }
                return this.mUIPTSWindow;
            }
        }
        #endregion
        
        #region Fields
        private TouristCountExpectedValues mTouristCountExpectedValues;
        
        private UIStartmenuPane mUIStartmenuPane;
        
        private UIPTSWindow mUIPTSWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TouristCount'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class TouristCountExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of '10' label equals '10'
        /// </summary>
        public string TotalTouristsDisplayText = "10";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIStartmenuPane : UITestControl
    {
        
        public UIStartmenuPane()
        {
            #region Search Criteria
            this.TechnologyName = "UIA";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Pane";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Start menu";
            this.SearchProperties["FrameworkId"] = "Win32";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "ImmersiveLauncher";
            this.WindowTitles.Add("Start menu");
            #endregion
        }
        
        #region Properties
        public UIStartAppsList UIStartAppsList
        {
            get
            {
                if ((this.mUIStartAppsList == null))
                {
                    this.mUIStartAppsList = new UIStartAppsList(this);
                }
                return this.mUIStartAppsList;
            }
        }
        #endregion
        
        #region Fields
        private UIStartAppsList mUIStartAppsList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIStartAppsList : DirectUIControl
    {
        
        public UIStartAppsList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DirectUIControl.PropertyNames.AutomationId] = "GridRoot";
            this.WindowTitles.Add("Start menu");
            #endregion
        }
        
        #region Properties
        public UIMailGroup UIMailGroup
        {
            get
            {
                if ((this.mUIMailGroup == null))
                {
                    this.mUIMailGroup = new UIMailGroup(this);
                }
                return this.mUIMailGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIMailGroup mUIMailGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIMailGroup : DirectUIControl
    {
        
        public UIMailGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[DirectUIControl.PropertyNames.AutomationId] = "Group 2305843009213693952";
            this.WindowTitles.Add("Start menu");
            #endregion
        }
        
        #region Properties
        public DirectUIControl UIPTSListItem
        {
            get
            {
                if ((this.mUIPTSListItem == null))
                {
                    this.mUIPTSListItem = new DirectUIControl(this);
                    #region Search Criteria
                    this.mUIPTSListItem.SearchProperties[DirectUIControl.PropertyNames.AutomationId] = "15fa5c6d-509c-4ea1-9459-cb4b0a9a0b35_bqdmac4rycgqj!App";
                    this.mUIPTSListItem.WindowTitles.Add("Start menu");
                    #endregion
                }
                return this.mUIPTSListItem;
            }
        }
        #endregion
        
        #region Fields
        private DirectUIControl mUIPTSListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPTSWindow : XamlWindow
    {
        
        public UIPTSWindow()
        {
            #region Search Criteria
            this.SearchProperties[XamlControl.PropertyNames.Name] = "PTS";
            this.SearchProperties[XamlControl.PropertyNames.ClassName] = "Windows.UI.Core.CoreWindow";
            this.WindowTitles.Add("PTS");
            #endregion
        }
        
        #region Properties
        public XamlEdit UIUserNameTextboxEdit
        {
            get
            {
                if ((this.mUIUserNameTextboxEdit == null))
                {
                    this.mUIUserNameTextboxEdit = new XamlEdit(this);
                    #region Search Criteria
                    this.mUIUserNameTextboxEdit.SearchProperties[XamlEdit.PropertyNames.AutomationId] = "UserNameTextbox";
                    this.mUIUserNameTextboxEdit.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUIUserNameTextboxEdit;
            }
        }
        
        public XamlEdit UIPasswordTextboxEdit
        {
            get
            {
                if ((this.mUIPasswordTextboxEdit == null))
                {
                    this.mUIPasswordTextboxEdit = new XamlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordTextboxEdit.SearchProperties[XamlEdit.PropertyNames.AutomationId] = "PasswordTextbox";
                    this.mUIPasswordTextboxEdit.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUIPasswordTextboxEdit;
            }
        }
        
        public XamlButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[XamlButton.PropertyNames.AutomationId] = "Login";
                    this.mUILoginButton.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        
        public XamlButton UIReportsButton
        {
            get
            {
                if ((this.mUIReportsButton == null))
                {
                    this.mUIReportsButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUIReportsButton.SearchProperties[XamlButton.PropertyNames.AutomationId] = "Reports";
                    this.mUIReportsButton.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUIReportsButton;
            }
        }
        
        public XamlButton UITouristVisitingReporButton
        {
            get
            {
                if ((this.mUITouristVisitingReporButton == null))
                {
                    this.mUITouristVisitingReporButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUITouristVisitingReporButton.SearchProperties[XamlButton.PropertyNames.AutomationId] = "TouristVisitingReportButton";
                    this.mUITouristVisitingReporButton.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUITouristVisitingReporButton;
            }
        }
        
        public UIDatepickerGroup UIDatepickerGroup
        {
            get
            {
                if ((this.mUIDatepickerGroup == null))
                {
                    this.mUIDatepickerGroup = new UIDatepickerGroup(this);
                }
                return this.mUIDatepickerGroup;
            }
        }
        
        public XamlButton UISearchButton
        {
            get
            {
                if ((this.mUISearchButton == null))
                {
                    this.mUISearchButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUISearchButton.SearchProperties[XamlButton.PropertyNames.Name] = "Search";
                    this.mUISearchButton.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUISearchButton;
            }
        }
        
        public UIScrollViewerPane UIScrollViewerPane
        {
            get
            {
                if ((this.mUIScrollViewerPane == null))
                {
                    this.mUIScrollViewerPane = new UIScrollViewerPane(this);
                }
                return this.mUIScrollViewerPane;
            }
        }
        #endregion
        
        #region Fields
        private XamlEdit mUIUserNameTextboxEdit;
        
        private XamlEdit mUIPasswordTextboxEdit;
        
        private XamlButton mUILoginButton;
        
        private XamlButton mUIReportsButton;
        
        private XamlButton mUITouristVisitingReporButton;
        
        private UIDatepickerGroup mUIDatepickerGroup;
        
        private XamlButton mUISearchButton;
        
        private UIScrollViewerPane mUIScrollViewerPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDatepickerGroup : XamlControl
    {
        
        public UIDatepickerGroup(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Group";
            this.SearchProperties["AutomationId"] = "FromDate";
            this.WindowTitles.Add("PTS");
            #endregion
        }
        
        #region Properties
        public XamlComboBox UIDayComboBox
        {
            get
            {
                if ((this.mUIDayComboBox == null))
                {
                    this.mUIDayComboBox = new XamlComboBox(this);
                    #region Search Criteria
                    this.mUIDayComboBox.SearchProperties[XamlComboBox.PropertyNames.AutomationId] = "DayPicker";
                    this.mUIDayComboBox.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUIDayComboBox;
            }
        }
        #endregion
        
        #region Fields
        private XamlComboBox mUIDayComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIScrollViewerPane : XamlControl
    {
        
        public UIScrollViewerPane(XamlControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Pane";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "ScrollViewer";
            this.SearchProperties["AutomationId"] = "scrollViewer";
            this.WindowTitles.Add("PTS");
            #endregion
        }
        
        #region Properties
        public XamlText TotalTourists
        {
            get
            {
                if ((this.mTotalTourists == null))
                {
                    this.mTotalTourists = new XamlText(this);
                    #region Search Criteria
                    this.mTotalTourists.SearchProperties[XamlText.PropertyNames.Name] = "10";
                    this.mTotalTourists.SearchProperties[XamlText.PropertyNames.Instance] = "2";
                    this.mTotalTourists.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mTotalTourists;
            }
        }
        
        public XamlText UIItem12Text
        {
            get
            {
                if ((this.mUIItem12Text == null))
                {
                    this.mUIItem12Text = new XamlText(this);
                    #region Search Criteria
                    this.mUIItem12Text.SearchProperties[XamlText.PropertyNames.Name] = "12";
                    this.mUIItem12Text.WindowTitles.Add("PTS");
                    #endregion
                }
                return this.mUIItem12Text;
            }
        }
        #endregion
        
        #region Fields
        private XamlText mTotalTourists;
        
        private XamlText mUIItem12Text;
        #endregion
    }
}
