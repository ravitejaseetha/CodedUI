// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace HybridFrameworkNew
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// FullNameEdit - Use 'FullNameEditExpectedValues' to pass parameters into this method.
        /// </summary>
        public void FullNameEdit()
        {
            #region Variable Declarations
            HtmlEdit uIUsernameEdit = this.UIHttpsravitejaPtsWebiWindow.UIHttpsravitejaPtsWebiDocument.UIUsernameEdit;
            #endregion

            // Verify that the 'ValueAttribute' property of 'username' text box equals 'Rambo'
            Assert.AreEqual(this.FullNameEditExpectedValues.UIUsernameEditValueAttribute, uIUsernameEdit.ValueAttribute, "name not found");
        }
        
        #region Properties
        public virtual FullNameEditExpectedValues FullNameEditExpectedValues
        {
            get
            {
                if ((this.mFullNameEditExpectedValues == null))
                {
                    this.mFullNameEditExpectedValues = new FullNameEditExpectedValues();
                }
                return this.mFullNameEditExpectedValues;
            }
        }
        
        public UIHttpsravitejaPtsWebiWindow UIHttpsravitejaPtsWebiWindow
        {
            get
            {
                if ((this.mUIHttpsravitejaPtsWebiWindow == null))
                {
                    this.mUIHttpsravitejaPtsWebiWindow = new UIHttpsravitejaPtsWebiWindow();
                }
                return this.mUIHttpsravitejaPtsWebiWindow;
            }
        }
        
        public UIGovernmentofSikkimStWindow UIGovernmentofSikkimStWindow
        {
            get
            {
                if ((this.mUIGovernmentofSikkimStWindow == null))
                {
                    this.mUIGovernmentofSikkimStWindow = new UIGovernmentofSikkimStWindow();
                }
                return this.mUIGovernmentofSikkimStWindow;
            }
        }
        #endregion
        
        #region Fields
        private FullNameEditExpectedValues mFullNameEditExpectedValues;
        
        private UIHttpsravitejaPtsWebiWindow mUIHttpsravitejaPtsWebiWindow;
        
        private UIGovernmentofSikkimStWindow mUIGovernmentofSikkimStWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FullNameEdit'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class FullNameEditExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ValueAttribute' property of 'username' text box equals 'Rambo'
        /// </summary>
        public string UIUsernameEditValueAttribute = "Rambo";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIHttpsravitejaPtsWebiWindow : BrowserWindow
    {
        
        public UIHttpsravitejaPtsWebiWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "https://raviteja/PtsWeb/ilp/register";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("https://raviteja/PtsWeb/ilp/register");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHttpsravitejaPtsWebiDocument UIHttpsravitejaPtsWebiDocument
        {
            get
            {
                if ((this.mUIHttpsravitejaPtsWebiDocument == null))
                {
                    this.mUIHttpsravitejaPtsWebiDocument = new UIHttpsravitejaPtsWebiDocument(this);
                }
                return this.mUIHttpsravitejaPtsWebiDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHttpsravitejaPtsWebiDocument mUIHttpsravitejaPtsWebiDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIHttpsravitejaPtsWebiDocument : HtmlDocument
    {
        
        public UIHttpsravitejaPtsWebiDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/PtsWeb/ilp/register";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://raviteja/PtsWeb/ilp/register";
            this.WindowTitles.Add("https://raviteja/PtsWeb/ilp/register");
            #endregion
        }
        
        #region Properties
        public UITouristsTable UITouristsTable
        {
            get
            {
                if ((this.mUITouristsTable == null))
                {
                    this.mUITouristsTable = new UITouristsTable(this);
                }
                return this.mUITouristsTable;
            }
        }
        
        public HtmlEdit UIUsernameEdit
        {
            get
            {
                if ((this.mUIUsernameEdit == null))
                {
                    this.mUIUsernameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIUsernameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "username";
                    this.mUIUsernameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "username";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"username\" class=\"form-control\" id=";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "4";
                    this.mUIUsernameEdit.WindowTitles.Add("https://raviteja/PtsWeb/ilp/register");
                    #endregion
                }
                return this.mUIUsernameEdit;
            }
        }
        
        public UIRegisterFormCustom UIRegisterFormCustom
        {
            get
            {
                if ((this.mUIRegisterFormCustom == null))
                {
                    this.mUIRegisterFormCustom = new UIRegisterFormCustom(this);
                }
                return this.mUIRegisterFormCustom;
            }
        }
        #endregion
        
        #region Fields
        private UITouristsTable mUITouristsTable;
        
        private HtmlEdit mUIUsernameEdit;
        
        private UIRegisterFormCustom mUIRegisterFormCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITouristsTable : HtmlTable
    {
        
        public UITouristsTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "tourists";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Full Name\r\n\r\nPhoto\r\n\r\nMobile Number\r\n\r\nP";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table table-striped table-bordered\" id=\"tourists\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "6";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table table-striped table-bordered";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("https://raviteja/PtsWeb/ilp/register");
            #endregion
        }
        
        #region Properties
        public HtmlButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIItemButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIItemButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = null;
                    this.mUIItemButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIItemButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIItemButton.FilterProperties[HtmlButton.PropertyNames.Class] = "glyphicon glyphicon-pencil btn-primary ";
                    this.mUIItemButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"glyphicon glyphicon-pencil btn-pr";
                    this.mUIItemButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUIItemButton.WindowTitles.Add("https://raviteja/PtsWeb/ilp/register");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIRegisterFormCustom : HtmlCustom
    {
        
        public UIRegisterFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "registerForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "form-horizontal bv-form";
            this.FilterProperties["ControlDefinition"] = "class=\"form-horizontal bv-form\" id=\"regi";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("https://raviteja/PtsWeb/ilp/register");
            #endregion
        }
        
        #region Properties
        public HtmlButton UIUpdateTouristButton
        {
            get
            {
                if ((this.mUIUpdateTouristButton == null))
                {
                    this.mUIUpdateTouristButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUIUpdateTouristButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIUpdateTouristButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIUpdateTouristButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = " UpdateTourist ";
                    this.mUIUpdateTouristButton.SearchProperties[HtmlButton.PropertyNames.Type] = "button";
                    this.mUIUpdateTouristButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIUpdateTouristButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn  btn-primary";
                    this.mUIUpdateTouristButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn  btn-primary\" type=\"button\" d";
                    this.mUIUpdateTouristButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "4";
                    this.mUIUpdateTouristButton.WindowTitles.Add("https://raviteja/PtsWeb/ilp/register");
                    #endregion
                }
                return this.mUIUpdateTouristButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUIUpdateTouristButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGovernmentofSikkimStWindow : BrowserWindow
    {
        
        public UIGovernmentofSikkimStWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Government of Sikkim | State Permit Tracking System";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Government of Sikkim | State Permit Tracking System");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGovernmentofSikkimStDocument UIGovernmentofSikkimStDocument
        {
            get
            {
                if ((this.mUIGovernmentofSikkimStDocument == null))
                {
                    this.mUIGovernmentofSikkimStDocument = new UIGovernmentofSikkimStDocument(this);
                }
                return this.mUIGovernmentofSikkimStDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGovernmentofSikkimStDocument mUIGovernmentofSikkimStDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIGovernmentofSikkimStDocument : HtmlDocument
    {
        
        public UIGovernmentofSikkimStDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Government of Sikkim | State Permit Tracking System";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/PtsWeb/Reports/IlpReport.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://raviteja/PtsWeb/Reports/IlpReport.aspx?ilpnumber=P886114569869";
            this.WindowTitles.Add("Government of Sikkim | State Permit Tracking System");
            #endregion
        }
        
        #region Properties
        public UIContentPlaceHolder1_Frame UIContentPlaceHolder1_Frame
        {
            get
            {
                if ((this.mUIContentPlaceHolder1_Frame == null))
                {
                    this.mUIContentPlaceHolder1_Frame = new UIContentPlaceHolder1_Frame(this);
                }
                return this.mUIContentPlaceHolder1_Frame;
            }
        }
        #endregion
        
        #region Fields
        private UIContentPlaceHolder1_Frame mUIContentPlaceHolder1_Frame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIContentPlaceHolder1_Frame : HtmlIFrame
    {
        
        public UIContentPlaceHolder1_Frame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "ContentPlaceHolder1_ReportViewer1ReportFrame";
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.AbsolutePath] = "/PtsWeb/Telerik.ReportViewer.axd";
            this.FilterProperties[HtmlFrame.PropertyNames.PageUrl] = "/PtsWeb/Telerik.ReportViewer.axd?instanceID=12a083fb28a0485bb0aad3510a691c44&opty" +
                "pe=Report&PageIndex=0&RenderID=4dad1586199c476382e5285e51125cc5&RenderingFormat=" +
                "HTML5Interactive";
            this.FilterProperties[HtmlFrame.PropertyNames.Title] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.Class] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "width=\"0\" height=\"0\" id=\"ContentPlaceHol";
            this.FilterProperties[HtmlFrame.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("Government of Sikkim | State Permit Tracking System");
            #endregion
        }
        
        #region Properties
        public UIILPReportDocument UIILPReportDocument
        {
            get
            {
                if ((this.mUIILPReportDocument == null))
                {
                    this.mUIILPReportDocument = new UIILPReportDocument(this);
                }
                return this.mUIILPReportDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIILPReportDocument mUIILPReportDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIILPReportDocument : HtmlDocument
    {
        
        public UIILPReportDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ILPReport";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/PtsWeb/Telerik.ReportViewer.axd";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://raviteja/PtsWeb/Telerik.ReportViewer.axd?instanceID=12a083fb28a0485bb0aad" +
                "3510a691c44&optype=Report&PageIndex=0&RenderID=4dad1586199c476382e5285e51125cc5&" +
                "RenderingFormat=HTML5Interactive";
            this.WindowTitles.Add("Government of Sikkim | State Permit Tracking System");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "pictureBox1 s28-";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "title=\"\" class=\"pictureBox1 s28-\" style=\"left: 259px; top: 0px; width: 106px; hei" +
                        "ght: 106px; overflow: hidden; position: absolute;\"";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "111";
                    this.mUIItemPane.WindowTitles.Add("Government of Sikkim | State Permit Tracking System");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItemPane;
        #endregion
    }
}
